#library "SPPRESET"
#include "zcommon.acs"

//    ANGLES
//0    ü¢Ç  East
//32   ü¢Ö  Northeast
//64   ü¢Å  North
//96   ü¢Ñ  Northwest
//128  ü¢Ä  West
//160  ü¢á  Southwest
//192  ü¢É  South
//224  ü¢Ü  Southeast


script "Check_Points" OPEN
{
	int levnum;

	switch (GetCvar("sp_presets"))
	{

	//////////////////////////////////////////////////////////////// NOTHING
	case 0:
	break;

	//////////////////////////////////////////////////////////////// The Ultimate DOOM
	case 1:
		levnum = GetLevelInfo(LEVELINFO_LEVELNUM);
		switch (levnum)
		{
		case 1: 	//MAP01
		Log(s:"\c[Chlorine]The Ultimate DOOM checkpoints loaded.");
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 2:		//MAP02
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 3:		//MAP03
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 4:		//MAP04
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 5:		//MAP05
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 6:		//MAP06
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 7:		//MAP07
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 8:		//MAP08
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 9:		//MAP09
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 10:	//MAP10
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 11:	//MAP11
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 12:	//MAP12
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 13:	//MAP13
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 14:	//MAP14
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 15:	//MAP15
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 16:	//MAP16
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 17:	//MAP17
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 18:	//MAP18
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 19:	//MAP19
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 20:	//MAP20
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 21:	//MAP21
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 22:	//MAP22
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 23:	//MAP23
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 24:	//MAP24
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 25:	//MAP25
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 26:	//MAP26
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 27:	//MAP27
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 28:	//MAP28
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 29:	//MAP29
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 30:	//MAP30
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 31:	//MAP31
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 32:	//MAP32
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		default:
		break;
		}
	break;

	//////////////////////////////////////////////////////////////////// DOOM 2: Hell on Earth
	case 2:
		levnum = GetLevelInfo(LEVELINFO_LEVELNUM);
		switch (levnum)
		{
		case 1:		 //MAP01
		Log(s:"\c[Chlorine]DOOM 2: Hell on Earth checkpoints loaded.");
		PlaceCheckpoint(661.0,805.0,56.0);
		break;
		case 2:		//MAP02
		PlaceCheckpoint(548.0,1745.0,-24.0);
		break;
		case 3:		//MAP03
		PlaceCheckpoint(2722.0,2941.0,40.0);
		break;
		case 4:		//MAP04
		PlaceCheckpoint(-127.0,1763.0,0.0);
		break;
		case 5:		//MAP05
		PlaceCheckpoint(2065.0,69.0,160.0);
		break;
		case 6:		//MAP06
		PlaceCheckpoint(1196.81,1341.54,184.0);
		break;
		case 7:		//MAP07
		PlaceCheckpoint(-1595.92,661.178,8.0);
		break;
		case 8:		//MAP08
		PlaceCheckpoint(1733.14,2968.41,0.0);
		break;
		case 9:		//MAP09
		PlaceCheckpoint(-1912.89,1205.74,-136);
		break;
		case 10:	//MAP10
		PlaceCheckpoint(-197.565,-571.381,0);
		break;
		case 11:	//MAP11
		PlaceCheckpoint(415.765,1382.83,144);
		break;
		case 12:	//MAP12
		PlaceCheckpoint(-125.286,2018.38,40);
		break;
		case 13:	//MAP13
		PlaceCheckpoint(1448.96,-3072.33,16);
		break;
		case 14:	//MAP14
		PlaceCheckpoint(469.862,-247.685,105.115);
		break;
		case 15:	//MAP15
		PlaceCheckpoint(70.3619,-2138.31,384);
		break;
		case 16:	//MAP16
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 17:	//MAP17
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 18:	//MAP18
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 19:	//MAP19
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 20:	//MAP20
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 21:	//MAP21
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 22:	//MAP22
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 23:	//MAP23
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 24:	//MAP24
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 25:	//MAP25
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 26:	//MAP26
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 27:	//MAP27
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 28:	//MAP28
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 29:	//MAP29
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 30:	//MAP30
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 31:	//MAP31
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 32:	//MAP32
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		default:
		break;
		}
	break;

	//////////////////////////////////////////////////////////////// TNT: Evilution
	case 3:
		levnum = GetLevelInfo(LEVELINFO_LEVELNUM);
		switch (levnum)
		{
		case 1:		 //MAP01
		Log(s:"\c[Chlorine]TNT: Evilution checkpoints loaded.");
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 2:		//MAP02
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 3:		//MAP03
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 4:		//MAP04
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 5:		//MAP05
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 6:		//MAP06
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 7:		//MAP07
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 8:		//MAP08
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 9:		//MAP09
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 10:	//MAP10
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 11:	//MAP11
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 12:	//MAP12
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 13:	//MAP13
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 14:	//MAP14
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 15:	//MAP15
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 16:	//MAP16
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 17:	//MAP17
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 18:	//MAP18
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 19:	//MAP19
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 20:	//MAP20
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 21:	//MAP21
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 22:	//MAP22
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 23:	//MAP23
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 24:	//MAP24
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 25:	//MAP25
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 26:	//MAP26
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 27:	//MAP27
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 28:	//MAP28
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 29:	//MAP29
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 30:	//MAP30
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 31:	//MAP31
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 32:	//MAP32
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		default:
		break;
		}
	break;

	//////////////////////////////////////////////////////////////// The Plutonia Experiment
	case 4:
		levnum = GetLevelInfo(LEVELINFO_LEVELNUM);
		switch (levnum)
		{
		case 1: //MAP01
		Log(s:"\c[Chlorine]The Plutonia Experiment checkpoints loaded.");
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 2:		//MAP02
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 3:		//MAP03
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 4:		//MAP04
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 5:		//MAP05
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 6:		//MAP06
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 7:		//MAP07
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 8:		//MAP08
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 9:		//MAP09
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 10:	//MAP10
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 11:	//MAP11
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 12:	//MAP12
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 13:	//MAP13
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 14:	//MAP14
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 15:	//MAP15
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 16:	//MAP16
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 17:	//MAP17
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 18:	//MAP18
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 19:	//MAP19
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 20:	//MAP20
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 21:	//MAP21
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 22:	//MAP22
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 23:	//MAP23
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 24:	//MAP24
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 25:	//MAP25
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 26:	//MAP26
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 27:	//MAP27
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 28:	//MAP28
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 29:	//MAP29
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 30:	//MAP30
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 31:	//MAP31
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 32:	//MAP32
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		default:
		break;
		}
		break;

	//////////////////////////////////////////////////////////////// Freedoom: Phase 1
	case 5:
		levnum = GetLevelInfo(LEVELINFO_LEVELNUM);
		switch (levnum)
		{
		case 1: //MAP01
		Log(s:"\c[Chlorine]Freedoom: Phase 1 checkpoints loaded.");
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 2:		//MAP02
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 3:		//MAP03
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 4:		//MAP04
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 5:		//MAP05
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 6:		//MAP06
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 7:		//MAP07
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 8:		//MAP08
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 9:		//MAP09
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 10:	//MAP10
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 11:	//MAP11
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 12:	//MAP12
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 13:	//MAP13
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 14:	//MAP14
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 15:	//MAP15
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 16:	//MAP16
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 17:	//MAP17
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 18:	//MAP18
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 19:	//MAP19
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 20:	//MAP20
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 21:	//MAP21
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 22:	//MAP22
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 23:	//MAP23
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 24:	//MAP24
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 25:	//MAP25
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 26:	//MAP26
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 27:	//MAP27
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 28:	//MAP28
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 29:	//MAP29
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 30:	//MAP30
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 31:	//MAP31
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 32:	//MAP32
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		default:
		break;
		}
		break;

	//////////////////////////////////////////////////////////////// Freedoom: Phase 2
	case 6:
		levnum = GetLevelInfo(LEVELINFO_LEVELNUM);
		switch (levnum)
		{
		case 1: //MAP01
		Log(s:"\c[Chlorine]Freedoom: Phase 2 checkpoints loaded.");
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 2:		//MAP02
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 3:		//MAP03
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 4:		//MAP04
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 5:		//MAP05
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 6:		//MAP06
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 7:		//MAP07
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 8:		//MAP08
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 9:		//MAP09
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 10:	//MAP10
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 11:	//MAP11
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 12:	//MAP12
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 13:	//MAP13
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 14:	//MAP14
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 15:	//MAP15
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 16:	//MAP16
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 17:	//MAP17
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 18:	//MAP18
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 19:	//MAP19
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 20:	//MAP20
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 21:	//MAP21
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 22:	//MAP22
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 23:	//MAP23
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 24:	//MAP24
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 25:	//MAP25
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 26:	//MAP26
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 27:	//MAP27
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 28:	//MAP28
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 29:	//MAP29
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 30:	//MAP30
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 31:	//MAP31
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 32:	//MAP32
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		default:
		break;
		}
		break;

	//////////////////////////////////////////////////////////////// Chex(R) Quest 3
	case 7:
		levnum = GetLevelInfo(LEVELINFO_LEVELNUM);
		switch (levnum)
		{
		case 1: //MAP01
		Log(s:"\c[Chlorine]Chex(R) Quest 3");
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 2:		//MAP02
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 3:		//MAP03
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 4:		//MAP04
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 5:		//MAP05
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 6:		//MAP06
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 7:		//MAP07
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 8:		//MAP08
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 9:		//MAP09
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 10:	//MAP10
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 11:	//MAP11
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 12:	//MAP12
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 13:	//MAP13
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 14:	//MAP14
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 15:	//MAP15
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 16:	//MAP16
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 17:	//MAP17
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 18:	//MAP18
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 19:	//MAP19
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 20:	//MAP20
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 21:	//MAP21
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 22:	//MAP22
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 23:	//MAP23
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 24:	//MAP24
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 25:	//MAP25
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 26:	//MAP26
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 27:	//MAP27
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 28:	//MAP28
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 29:	//MAP29
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 30:	//MAP30
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 31:	//MAP31
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 32:	//MAP32
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		default:
		break;
		}
		break;

	//////////////////////////////////////////////////////////////// Alien Vendetta
	case 201: //Possibly a problem in 20XX
		levnum = GetLevelInfo(LEVELINFO_LEVELNUM);
		switch (levnum)
		{
		case 1: //MAP01
		Log(s:"Alien Vendetta");
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 2:		//MAP02
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 3:		//MAP03
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 4:		//MAP04
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 5:		//MAP05
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 6:		//MAP06
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 7:		//MAP07
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 8:		//MAP08
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 9:		//MAP09
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 10:	//MAP10
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 11:	//MAP11
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 12:	//MAP12
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 13:	//MAP13
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 14:	//MAP14
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 15:	//MAP15
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 16:	//MAP16
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 17:	//MAP17
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 18:	//MAP18
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 19:	//MAP19
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 20:	//MAP20
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 21:	//MAP21
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 22:	//MAP22
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 23:	//MAP23
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 24:	//MAP24
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 25:	//MAP25
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 26:	//MAP26
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 27:	//MAP27
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 28:	//MAP28
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 29:	//MAP29
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 30:	//MAP30
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 31:	//MAP31
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 32:	//MAP32
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		default:
		break;
		}
		break;

//////////////////////////////////////////////////////////////// AUGER ; ZENITH
	case 202: //Possibly a problem in 20XX
		levnum = GetLevelInfo(LEVELINFO_LEVELNUM);
		switch (levnum)
		{
		case 1: //MAP01
		Log(s:"\c[Chlorine]AUGER; ZENITH");
		PlaceCheckpoint(1771.92,365.976,80);
		break;
		case 2:		//MAP02
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 3:		//MAP03
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 4:		//MAP04
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 5:		//MAP05
		PlaceCheckpoint(185.978,2325.91,768);
		break;
		case 6:		//MAP06
		PlaceCheckpoint(-1683.49,-5173.91,-632);
		break;
		case 7:		//MAP07
		PlaceCheckpoint(3833.4,1089.31,329);
		break;
		case 8:		//MAP08
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 9:		//MAP09
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 10:	//MAP10
		PlaceCheckpoint(-6977.98,-2171.73,340);
		PlaceCheckpoint(-6973.34,400.191,120);
		break;
		case 11:	//MAP11
		PlaceCheckpoint(4244.62,-1907.33,256);
		break;
		case 12:	//MAP12
		PlaceCheckpoint(-8029.5,-30687.2,0);
		break;
		case 13:	//MAP13
		PlaceCheckpoint(1588.42,-1323.89,-672);
		break;
		case 14:	//MAP14
		PlaceCheckpoint(-4014.85,2816.34,48);
		break;
		case 15:	//MAP15
		PlaceCheckpoint(-2049.39,2479.77,24);
		break;
		case 16:	//MAP16
		PlaceCheckpoint(2227.16,2341.04,-224);
		PlaceCheckpoint(3256.35,-1782.55,-200);
		break;
		case 17: //MAP17
		PlaceCheckpoint(1813.92,1757.32,104);
		PlaceCheckpoint(115.662,-100.077,176);
		break;
		case 18:	//MAP18
		PlaceCheckpoint(-480.616,-379.459,44);
		PlaceCheckpoint(-980.97,591.432,144);
		break;
		case 19:	//MAP19
		PlaceCheckpoint(275.718,1088.83,0);
		break;
		case 20:	//MAP20
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 21:	//MAP21
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 22:	//MAP22
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 23:	//MAP23
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 24:	//MAP24
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 25:	//MAP25
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 26:	//MAP26
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 27:	//MAP27
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 28:	//MAP28
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 29:	//MAP29
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 30:	//MAP30
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 31:	//MAP31
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		case 32:	//MAP32
		PlaceCheckpoint(0.0,0.0,0.0);
		break;
		default:
		break;
		}
		break;



	break;

	///////////////////////////////////////////////////////

	}
}


//Values execpt the last one must be fixed-point.
function void PlaceCheckpoint(int sdx,int sdy,int sdz)
{
SpawnForced("SP_SaveDisk",sdx,sdy,sdz,0,0);
}

/*
//map 01
PlaceCheckpoint(X,Y,Z,ANGLE,MAP);
//map 02
PlaceCheckpoint(X,Y,Z,ANGLE,MAP);
*/